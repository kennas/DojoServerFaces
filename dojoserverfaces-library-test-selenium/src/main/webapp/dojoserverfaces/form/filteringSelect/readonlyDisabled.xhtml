<!--
    	Copyright (c) 2011, The Dojo Foundation All Rights Reserved.
    	Available via Academic Free License >= 2.1 OR the modified BSD license.
    	see: http://dojotoolkit.org/license for details
 -->
<ui:composition xmlns="http://www.w3.org/1999/xhtml" xmlns:h="http://java.sun.com/jsf/html" xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:jd="http://www.dojoserverfaces.org/library/standard"
xmlns:dojoBehaviors="http://www.dojoserverfaces.org/core">
	<!-- Selenium test method: org.dojoserverfaces.tests.category.component.ComponentSelenium.testReadOnlyDisabled() -->	
	<div class="testCase">
		<f:subview id="readonlyDisabled">
		    <span class="testTitle"> Test case to check that readonly component cannot be edited</span>
			<jd:selectItemStore id="values">
				<f:selectItem itemValue="" itemLabel="" />
				<f:selectItems value="#{ filteringSelectBean.values }" />
			</jd:selectItemStore>
			<h:panelGrid columns="1"> 		
				<jd:filteringSelect id="widgetReadOnly" value="#{filteringSelectBean.widgetReadOnly.data}" readOnly="true" store="values">
				</jd:filteringSelect>
				</h:panelGrid>
			<span class="testTitle">Test case to check that disabled component can not react on user clicks</span>
			<h:panelGrid columns="1"> 
				<jd:filteringSelect id="widgetDisabled" value="#{filteringSelectBean.widgetDisabled.data}" disabled="true" store="values"
					onclick="document.getElementById('form:readonlyDisabled:outputDisabled').innerHTML='Oops'">
				</jd:filteringSelect>
				<h:outputText id="outputDisabled" value="Should not change on client event"></h:outputText>
			</h:panelGrid>
		</f:subview>
	</div>
</ui:composition>