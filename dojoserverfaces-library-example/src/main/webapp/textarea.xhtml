<?xml version="1.0" encoding="UTF-8" ?>
<ui:composition
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:dojo="http://www.dojoserverfaces.org/library/standard"
xmlns:dojoBehaviors="http://www.dojoserverfaces.org/core"
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:src="http://java.sun.com/jsf/composite/taglib/source"
    template="/template/component-test.xhtml"
>
    <ui:param
        name="component"
        value="textArea"
    />
    <ui:define name="attributes">
        <h:panelGrid
            columns="3"
            id="propertyGrid"
        >
            <h:outputLabel for="disabled1">
                <h:outputText value="disabled:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:selectBooleanCheckbox
                styleClass="selectBooleanCheckbox"
                id="disabled1"
                value="#{textArea.disabled}"
            >
            </h:selectBooleanCheckbox>
            <h:outputLabel for="readOnly1">
                <h:outputText value="readOnly:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:selectBooleanCheckbox
                styleClass="selectBooleanCheckbox"
                id="readOnly1"
                value="#{textArea.readOnly}"
            >
            </h:selectBooleanCheckbox>
            <h:outputLabel for="required1">
                <h:outputText value="required:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:selectBooleanCheckbox
                styleClass="selectBooleanCheckbox"
                id="required1"
                value="#{textArea.required}"
            >
            </h:selectBooleanCheckbox>
            <h:outputLabel for="cols1">
                <h:outputText value="cols:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:inputText
                styleClass="inputText"
                id="cols1"
                value="#{textArea.cols}"
            >
            </h:inputText>
            <h:outputLabel for="rows1">
                <h:outputText value="rows:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:inputText
                styleClass="inputText"
                id="rows1"
                value="#{textArea.rows}"
            >
            </h:inputText>
            <h:outputLabel for="maxLength1">
                <h:outputText value="maxLength:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:inputText
                styleClass="inputText"
                id="maxLength1"
                value="#{textArea.maxLength}"
            >
            </h:inputText>
            <h:outputLabel for="selectOnClick1">
                <h:outputText value="selectOnClick:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:selectBooleanCheckbox
                styleClass="selectBooleanCheckbox"
                id="selectOnClick1"
                value="#{textArea.selectOnClick}"
            >
            </h:selectBooleanCheckbox>
            <h:outputLabel for="trim1">
                <h:outputText value="trim:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:selectBooleanCheckbox
                styleClass="selectBooleanCheckbox"
                id="trim1"
                value="#{textArea.trim}"
            >
            </h:selectBooleanCheckbox>
            <h:outputLabel for="onBlur1">
                <h:outputText value="onBlur:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:inputText
                styleClass="inputText"
                id="onBlur1"
                value="#{textArea.onBlur}"
            >
            </h:inputText>
            <h:outputLabel for="onChange1">
                <h:outputText value="onChange:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:inputText
                styleClass="inputText"
                id="onChange1"
                value="#{textArea.onChange}"
            >
            </h:inputText>
            <h:outputLabel for="onFocus1">
                <h:outputText value="onFocus:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:inputText
                styleClass="inputText"
                id="onFocus1"
                value="#{textArea.onFocus}"
            >
            </h:inputText>
            <h:outputLabel for="onSelect1">
                <h:outputText value="onSelect:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:inputText
                styleClass="inputText"
                id="onSelect1"
                value="#{textArea.onSelect}"
            >
            </h:inputText>
        </h:panelGrid>
    </ui:define>
    <ui:define name="test">
        <h:panelGrid columns="1">
            <h:outputText value="Text:" />
            <dojo:textArea binding="#{textArea.wrapper[0]}" 
                value="#{store.record.text}"
            >
            </dojo:textArea>
        </h:panelGrid>
    </ui:define>
    <ui:define name="testOutput">
        <h:panelGrid columns="1">
            <h:outputText
                id="box2Output"
                value="text: #{store.record.text}"
            >
            </h:outputText>
        </h:panelGrid>
    </ui:define>
    <ui:define name="source">
        <src:tagNoChildren name="dojo:textArea">
            <f:facet name="attributes">
                <src:attributeExpression
                    name="value"
                    value="store.record.text"
                />
                <src:attributeExpression
                    name="options"
                    value="store.record.savedTextValues"
                />
                <src:attribute
                    name="readOnly"
                    value="#{textArea.readOnly}"
                />
                <src:attribute
                    name="disabled"
                    value="#{textArea.disabled}"
                />
                <src:attribute
                    name="required"
                    value="#{textArea.required}"
                />
                <src:attribute
                    name="cols"
                    value="#{textArea.cols}"
                />
                <src:attribute
                    name="rows"
                    value="#{textArea.rows}"
                />
                <src:attribute
                    name="maxLength"
                    value="#{textArea.maxLength}"
                />
               <src:attribute
                    name="selectOnClick"
                    value="#{textArea.selectOnClick}"
                />
                <src:attribute
                    name="trim"
                    value="#{textArea.trim}"
                />
                <src:attribute
                    name="onBlur"
                    value="#{textArea.onBlur}"
                />
                <src:attribute
                    name="onFocus"
                    value="#{textArea.onFocus}"
                />
                <src:attribute
                    name="onChange"
                    value="#{textArea.onChange}"
                />
            </f:facet>
        </src:tagNoChildren>
    </ui:define>
</ui:composition>