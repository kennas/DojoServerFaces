<?xml version="1.0" encoding="UTF-8" ?>
<ui:composition
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:dojo="http://www.dojoserverfaces.org/library/standard"
xmlns:dojoBehaviors="http://www.dojoserverfaces.org/core"
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:src="http://java.sun.com/jsf/composite/taglib/source"
    template="/template/component-test.xhtml"
>
    <ui:param
        name="component"
        value="numberSpinner"
    />
    <ui:define name="attributes">
        <h:panelGrid
            columns="3"
            id="propertyGrid"
        >
            <h:outputLabel for="disabled1">
                <h:outputText value="disabled:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:selectBooleanCheckbox
                styleClass="selectBooleanCheckbox"
                id="disabled1"
                value="#{numberSpinner.disabled}"
            >
            </h:selectBooleanCheckbox>
            <h:outputLabel for="readOnly1">
                <h:outputText value="readOnly:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:selectBooleanCheckbox
                styleClass="selectBooleanCheckbox"
                id="readOnly1"
                value="#{numberSpinner.readOnly}"
            >
            </h:selectBooleanCheckbox>
            <h:outputLabel for="required1">
                <h:outputText value="required:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:selectBooleanCheckbox
                styleClass="selectBooleanCheckbox"
                id="required1"
                value="#{numberSpinner.required}"
            >
            </h:selectBooleanCheckbox>
            <h:outputLabel for="smallDelta1">
                <h:outputText value="smallDelta:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:inputText
                styleClass="inputText"
                id="smallDelta1"
                value="#{numberSpinner.smallDelta}"
            >
                <f:convertNumber />
            </h:inputText>
            <h:outputLabel for="largeDelta1">
                <h:outputText value="largeDelta:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:inputText
                styleClass="inputText"
                id="largeDelta1"
                value="#{numberSpinner.largeDelta}"
            >
                <f:convertNumber />
            </h:inputText>
            <h:outputLabel for="locale1">
                <h:outputText value="locale:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:inputText
                styleClass="inputText"
                id="locale1"
                value="#{numberSpinner.locale}"
            >
            </h:inputText>
            <h:outputLabel for="pattern1">
                <h:outputText value="pattern:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:inputText
                styleClass="inputText"
                id="pattern1"
                value="#{numberSpinner.pattern}"
            >
            </h:inputText>
            <h:outputLabel for="placeHolder1">
                <h:outputText value="placeHolder:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:inputText
                styleClass="inputText"
                id="placeHolder1"
                value="#{numberSpinner.placeHolder}"
            >
            </h:inputText>
            <h:outputLabel for="places1">
                <h:outputText value="places:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:inputText
                styleClass="inputText"
                id="places1"
                value="#{numberSpinner.places}"
            >
            </h:inputText>
            <h:outputLabel for="rangeMessage1">
                <h:outputText value="rangeMessage:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:inputText
                styleClass="inputText"
                id="rangeMessage1"
                value="#{numberSpinner.rangeMessage}"
            >
            </h:inputText>
            <h:outputLabel for="selectOnClick1">
                <h:outputText value="selectOnClick:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:selectBooleanCheckbox
                styleClass="selectBooleanCheckbox"
                id="selectOnClick1"
                value="#{numberSpinner.selectOnClick}"
            >
            </h:selectBooleanCheckbox>
            <h:outputLabel for="strict1">
                <h:outputText value="strict:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:selectBooleanCheckbox
                value="#{numberSpinner.strict}"
                styleClass="selectBooleanCheckbox"
                id="strict1"
            ></h:selectBooleanCheckbox>
            <h:outputLabel for="trim1">
                <h:outputText value="trim:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:selectBooleanCheckbox
                styleClass="selectBooleanCheckbox"
                id="trim1"
                value="#{numberSpinner.trim}"
            >
            </h:selectBooleanCheckbox>
            <h:outputLabel for="type1">
                <h:outputText value="type:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:inputText
                styleClass="inputText"
                id="type1"
                value="#{numberSpinner.type}"
            >
            </h:inputText>
            <h:outputLabel for="onBlur1">
                <h:outputText value="onBlur:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:inputText
                styleClass="inputText"
                id="onBlur1"
                value="#{numberSpinner.onBlur}"
            >
            </h:inputText>
            <h:outputLabel for="onChange1">
                <h:outputText value="onChange:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:inputText
                styleClass="inputText"
                id="onChange1"
                value="#{numberSpinner.onChange}"
            >
            </h:inputText>
            <h:outputLabel for="onClick1">
                <h:outputText value="onClick:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:inputText
                styleClass="inputText"
                id="onClick1"
                value="#{numberSpinner.onClick}"
            >
            </h:inputText>
            <h:outputLabel for="onFocus1">
                <h:outputText value="onFocus:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:inputText
                styleClass="inputText"
                id="onFocus1"
                value="#{numberSpinner.onFocus}"
            >
            </h:inputText>
            <h:outputLabel for="onSelect1">
                <h:outputText value="onSelect:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:inputText
                styleClass="inputText"
                id="onSelect1"
                value="#{numberSpinner.onSelect}"
            >
            </h:inputText>
        </h:panelGrid>
    </ui:define>
    <ui:define name="test">
        <h:panelGrid columns="1">
            <h:outputText value="Integer: " />
            <dojo:numberSpinner binding="#{numberSpinner.wrapper[0]}"
                id="box1"
                value="#{store.record.count}"
            >
            </dojo:numberSpinner>
            <h:outputText value="Float: " />
            <dojo:numberSpinner binding="#{numberSpinner.wrapper[1]}"
                id="box2"
                value="#{store.record.amount}"
            >
            </dojo:numberSpinner>
        </h:panelGrid>
    </ui:define>
    <ui:define name="testOutput">
        <h:panelGrid columns="1">
            <h:outputText
                id="box1Output"
                value="Integer: #{store.record.count}"
            />
            <h:outputText
                id="box2Output"
                value="Float: #{store.record.amount}"
            />
        </h:panelGrid>
    </ui:define>
    <ui:define name="source">
        <src:tagNoChildren name="h:outputText">
            <f:facet name="attributes">
                <src:attribute
                    name="value"
                    value="Integer:"
                />
            </f:facet>
        </src:tagNoChildren>
        <src:tagNoChildren name="dojo:numberSpinner">
            <f:facet name="attributes">
                <src:attributeExpression
                    name="value"
                    value="store.record.count"
                />
                <src:attribute
                    name="readOnly"
                    value="#{numberSpinner.readOnly}"
                />
                <src:attribute
                    name="disabled"
                    value="#{numberSpinner.disabled}"
                />
                <src:attribute
                    name="required"
                    value="#{numberSpinner.required}"
                />
                <src:attribute
                    name="smallDelta"
                    value="#{numberSpinner.smallDelta}"
                />
                <src:attribute
                    name="largeDelta"
                    value="#{numberSpinner.largeDelta}"
                />
                <src:attribute
                    name="locale"
                    value="#{numberSpinner.locale}"
                />
                <src:attribute
                    name="pattern"
                    value="#{numberSpinner.pattern}"
                />
                <src:attribute
                    name="placeHolder"
                    value="#{numberSpinner.placeHolder}"
                />
                <src:attribute
                    name="places"
                    value="#{numberSpinner.places}"
                />
                <src:attribute
                    name="rangeMessage"
                    value="#{numberSpinner.rangeMessage}"
                />
                <src:attribute
                    name="selectOnClick"
                    value="#{numberSpinner.selectOnClick}"
                />
                <src:attribute
                    name="strict"
                    value="#{numberSpinner.strict}"
                />
                <src:attribute
                    name="type"
                    value="#{numberSpinner.type}"
                />
                <src:attribute
                    name="onBlur"
                    value="#{numberSpinner.onBlur}"
                />
                <src:attribute
                    name="onFocus"
                    value="#{numberSpinner.onFocus}"
                />
                <src:attribute
                    name="onChange"
                    value="#{numberSpinner.onChange}"
                />
            </f:facet>
        </src:tagNoChildren>
        <src:tagNoChildren name="h:outputText">
            <f:facet name="attributes">
                <src:attribute
                    name="value"
                    value="Float:"
                />
            </f:facet>
        </src:tagNoChildren>
        <src:tagNoChildren name="dojo:numberSpinner">
            <f:facet name="attributes">
                <src:attributeExpression
                    name="value"
                    value="store.record.amount"
                />
                <src:attribute
                    name="readOnly"
                    value="#{numberSpinner.readOnly}"
                />
                <src:attribute
                    name="disabled"
                    value="#{numberSpinner.disabled}"
                />
                <src:attribute
                    name="required"
                    value="#{numberSpinner.required}"
                />
                <src:attribute
                    name="smallDelta"
                    value="#{numberSpinner.smallDelta}"
                />
                <src:attribute
                    name="largeDelta"
                    value="#{numberSpinner.largeDelta}"
                />
                <src:attribute
                    name="locale"
                    value="#{numberSpinner.locale}"
                />
                <src:attribute
                    name="pattern"
                    value="#{numberSpinner.pattern}"
                />
                <src:attribute
                    name="placeHolder"
                    value="#{numberSpinner.placeHolder}"
                />
                <src:attribute
                    name="places"
                    value="#{numberSpinner.places}"
                />
                <src:attribute
                    name="rangeMessage"
                    value="#{numberSpinner.rangeMessage}"
                />
                <src:attribute
                    name="selectOnClick"
                    value="#{numberSpinner.selectOnClick}"
                />
                <src:attribute
                    name="strict"
                    value="#{numberSpinner.strict}"
                />
                <src:attribute
                    name="type"
                    value="#{numberSpinner.type}"
                />
                <src:attribute
                    name="onBlur"
                    value="#{numberSpinner.onBlur}"
                />
                <src:attribute
                    name="onFocus"
                    value="#{numberSpinner.onFocus}"
                />
                <src:attribute
                    name="onChange"
                    value="#{numberSpinner.onChange}"
                />
            </f:facet>
        </src:tagNoChildren>
    </ui:define>
</ui:composition>