<?xml version="1.0" encoding="UTF-8" ?>
<ui:composition
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:dojo="http://www.dojoserverfaces.org/library/standard"
xmlns:dojoBehaviors="http://www.dojoserverfaces.org/core"
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:src="http://java.sun.com/jsf/composite/taglib/source"
    template="/template/component-test.xhtml"
>
    <ui:param
        name="component"
        value="multiSelect"
    />
    <ui:define name="attributes">
        <h:panelGrid
            columns="3"
            id="propertyGrid"
        >
            <h:outputLabel for="disabled1">
                <h:outputText value="disabled:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:selectBooleanCheckbox
                styleClass="multiSelectBooleanCheckbox"
                id="disabled1"
                value="#{multiSelect.disabled}"
            >
            </h:selectBooleanCheckbox>
            <h:outputLabel for="readOnly1">
                <h:outputText value="readOnly:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:selectBooleanCheckbox
                styleClass="multiSelectBooleanCheckbox"
                id="readOnly1"
                value="#{multiSelect.readOnly}"
            >
            </h:selectBooleanCheckbox>
            <h:outputLabel for="required1">
                <h:outputText value="required:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:selectBooleanCheckbox
                styleClass="multiSelectBooleanCheckbox"
                id="required1"
                value="#{multiSelect.required}"
            >
            </h:selectBooleanCheckbox>
            <h:outputLabel for="onBlur1">
                <h:outputText value="onBlur:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:inputText
                styleClass="inputText"
                id="onBlur1"
                value="#{multiSelect.onBlur}"
            >
            </h:inputText>
            <h:outputLabel for="onChange1">
                <h:outputText value="onChange:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:inputText
                styleClass="inputText"
                id="onChange1"
                value="#{multiSelect.onChange}"
            >
            </h:inputText>
            <h:outputLabel for="onFocus1">
                <h:outputText value="onFocus:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:inputText
                styleClass="inputText"
                id="onFocus1"
                value="#{multiSelect.onFocus}"
            >
            </h:inputText>
        </h:panelGrid>
    </ui:define>
    <ui:define name="test">
        <h:panelGrid columns="1">
            <dojo:multiSelect binding="#{multiSelect.wrapper[0]}"
                value="#{store.record.textArray}"
            >
                <f:selectItems value="#{store.states}" />
            </dojo:multiSelect>
        </h:panelGrid>
    </ui:define>
    <ui:define name="testOutput">
        <h:panelGroup styleClass="panelGroup">
            <h:outputText value="selected" />
            <ul>
                <ui:repeat
                    var="item"
                    value="#{store.record.textArray}"
                >
                    <li><h:outputText value="#{item}" /></li>
                </ui:repeat>
            </ul>
        </h:panelGroup>
    </ui:define>
    <ui:define name="source">
        <src:tagNoChildren name="dojo:multiSelect">
            <f:facet name="attributes">
                <src:attributeExpression
                    name="value"
                    value="store.record.text"
                />
                <src:attribute
                    name="readOnly"
                    value="#{multiSelect.readOnly}"
                />
                <src:attribute
                    name="disabled"
                    value="#{multiSelect.disabled}"
                />
                <src:attribute
                    name="required"
                    value="#{multiSelect.required}"
                />
                <src:attribute
                    name="onBlur"
                    value="#{multiSelect.onBlur}"
                />
                <src:attribute
                    name="onFocus"
                    value="#{multiSelect.onFocus}"
                />
                <src:attribute
                    name="onChange"
                    value="#{multiSelect.onChange}"
                />
            </f:facet>
        </src:tagNoChildren>
    </ui:define>
</ui:composition>