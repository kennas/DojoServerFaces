<?xml version="1.0" encoding="UTF-8" ?>
<ui:composition
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:dojo="http://www.dojoserverfaces.org/library/standard"
xmlns:dojoBehaviors="http://www.dojoserverfaces.org/core"
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:src="http://java.sun.com/jsf/composite/taglib/source"
    template="/template/component-test.xhtml"
>
    <ui:param
        name="component"
        value="textBox"
    />
    <ui:define name="attributes">
        <h:panelGrid
            columns="3"
            id="propertyGrid"
        >
            <h:outputLabel for="disabled1">
                <h:outputText value="disabled:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:selectBooleanCheckbox
                styleClass="selectBooleanCheckbox"
                id="disabled1"
                value="#{textBox.disabled}"
            >
            </h:selectBooleanCheckbox>
            <h:outputLabel for="readOnly1">
                <h:outputText value="readOnly:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:selectBooleanCheckbox
                styleClass="selectBooleanCheckbox"
                id="readOnly1"
                value="#{textBox.readOnly}"
            >
            </h:selectBooleanCheckbox>
            <h:outputLabel for="required1">
                <h:outputText value="required:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:selectBooleanCheckbox
                styleClass="selectBooleanCheckbox"
                id="required1"
                value="#{textBox.required}"
            >
            </h:selectBooleanCheckbox>
            <h:outputLabel for="forceCase1">
                <h:outputText value="forceCase:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:selectOneMenu
                styleClass="selectOneMenu"
                id="forceCase1"
                value="#{textBox.forceCase}"
            >
                <f:selectItem
                    itemLabel=""
                    itemValue=""
                    noSelectionOption="true"
                />
                <f:selectItem
                    itemLabel="lower"
                    itemValue="lower"
                />
                <f:selectItem
                    itemLabel="upper"
                    itemValue="upper"
                />
                <f:selectItem
                    itemLabel="proper"
                    itemValue="proper"
                />
            </h:selectOneMenu>
            <h:outputLabel for="maxLength1">
                <h:outputText value="maxLength:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:inputText
                styleClass="inputText"
                id="maxLength1"
                value="#{textBox.maxLength}"
            >
            </h:inputText>
            <h:outputLabel for="placeHolder1">
                <h:outputText value="placeHolder:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:inputText
                styleClass="inputText"
                id="placeHolder1"
                value="#{textBox.placeHolder}"
            >
            </h:inputText>
            <h:outputLabel for="selectOnClick1">
                <h:outputText value="selectOnClick:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:selectBooleanCheckbox
                styleClass="selectBooleanCheckbox"
                id="selectOnClick1"
                value="#{textBox.selectOnClick}"
            >
            </h:selectBooleanCheckbox>
            <h:outputLabel for="trim1">
                <h:outputText value="trim:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:selectBooleanCheckbox
                styleClass="selectBooleanCheckbox"
                id="trim1"
                value="#{textBox.trim}"
            >
            </h:selectBooleanCheckbox>
            <h:outputLabel for="onBlur1">
                <h:outputText value="onBlur:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:inputText
                styleClass="inputText"
                id="onBlur1"
                value="#{textBox.onBlur}"
            >
            </h:inputText>
            <h:outputLabel for="onChange1">
                <h:outputText value="onChange:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:inputText
                styleClass="inputText"
                id="onChange1"
                value="#{textBox.onChange}"
            >
            </h:inputText>
            <h:outputLabel for="onFocus1">
                <h:outputText value="onFocus:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:inputText
                styleClass="inputText"
                id="onFocus1"
                value="#{textBox.onFocus}"
            >
            </h:inputText>
            <h:outputLabel for="onSelect1">
                <h:outputText value="onSelect:"></h:outputText>
            </h:outputLabel>
            <span>&#160;</span>
            <h:inputText
                styleClass="inputText"
                id="onSelect1"
                value="#{textBox.onSelect}"
            >
            </h:inputText>
        </h:panelGrid>
    </ui:define>
    <ui:define name="test">
        <h:panelGrid columns="1">
            <h:outputText value="Text:" />
            <dojo:textBox binding="#{textBox.wrapper[0]}"
                value="#{store.record.text}"
             >
            </dojo:textBox>
            <br />
            <h:outputText value="Float:" />
            <dojo:textBox binding="#{textBox.wrapper[1]}"
                value="#{store.record.amount}"
            >
            </dojo:textBox>
        </h:panelGrid>
    </ui:define>
    <ui:define name="testOutput">
        <h:panelGrid columns="1">
            <h:outputText
                id="box2Output"
                value="text: #{store.record.text}"
            >
            </h:outputText>
            <h:outputText
                id="box1Output"
                value="amount: #{store.record.amount}"
            >
            </h:outputText>
        </h:panelGrid>
    </ui:define>
    <ui:define name="source">
        <src:tagWithChildren name="h:panelGrid">
            <f:facet name="attributes">
                <src:attribute
                    name="columns"
                    value="1"
                />
            </f:facet>
            <src:tagNoChildren name="h:outputText">
                <f:facet name="attributes">
                    <src:attribute
                        name="value"
                        value="Text:"
                    />
                </f:facet>
            </src:tagNoChildren>
            <src:tagNoChildren name="dojo:textBox">
                <f:facet name="attributes">
                    <src:attributeExpression
                        name="value"
                        value="store.record.text"
                    />
                    <src:attribute
                        name="readOnly"
                        value="#{textBox.readOnly}"
                    />
                    <src:attribute
                        name="disabled"
                        value="#{textBox.disabled}"
                    />
                    <src:attribute
                        name="required"
                        value="#{textBox.required}"
                    />
                    <src:attribute
                        name="forceCase"
                        value="#{textBox.forceCase}"
                    />
                    <src:attribute
                        name="maxLength"
                        value="#{textBox.maxLength}"
                    />
                    <src:attribute
                        name="placeHolder"
                        value="#{textBox.placeHolder}"
                    />
                    <src:attribute
                        name="selectOnClick"
                        value="#{textBox.selectOnClick}"
                    />
                    <src:attribute
                        name="trim"
                        value="#{textBox.trim}"
                    />
                    <src:attribute
                        name="onBlur"
                        value="#{textBox.onBlur}"
                    />
                    <src:attribute
                        name="onFocus"
                        value="#{textBox.onFocus}"
                    />
                    <src:attribute
                        name="onChange"
                        value="#{textBox.onChange}"
                    />
                </f:facet>
            </src:tagNoChildren>
            <src:tagNoChildren name="br" />
            <src:tagNoChildren name="h:outputText">
                <f:facet name="attributes">
                    <src:attribute
                        name="value"
                        value="Float:"
                    />
                </f:facet>
            </src:tagNoChildren>
            <src:tagNoChildren name="dojo:textBox">
                <f:facet name="attributes">
                    <src:attributeExpression
                        name="value"
                        value="store.record.amount"
                    />
                    <src:attribute
                        name="readOnly"
                        value="#{textBox.readOnly}"
                    />
                    <src:attribute
                        name="disabled"
                        value="#{textBox.disabled}"
                    />
                    <src:attribute
                        name="required"
                        value="#{textBox.required}"
                    />
                    <src:attribute
                        name="forceCase"
                        value="#{textBox.forceCase}"
                    />
                    <src:attribute
                        name="maxLength"
                        value="#{textBox.maxLength}"
                    />
                    <src:attribute
                        name="placeHolder"
                        value="#{textBox.placeHolder}"
                    />
                    <src:attribute
                        name="selectOnClick"
                        value="#{textBox.selectOnClick}"
                    />
                    <src:attribute
                        name="trim"
                        value="#{textBox.trim}"
                    />
                    <src:attribute
                        name="onBlur"
                        value="#{textBox.onBlur}"
                    />
                    <src:attribute
                        name="onFocus"
                        value="#{textBox.onFocus}"
                    />
                    <src:attribute
                        name="onChange"
                        value="#{textBox.onChange}"
                    />
                </f:facet>
            </src:tagNoChildren>
        </src:tagWithChildren>
    </ui:define>
</ui:composition>